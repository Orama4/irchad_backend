
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.4.1
 * Query Engine version: a9055b89e58b4b5bfb59600785423b1db3d0e75d
 */
Prisma.prismaVersion = {
  client: "6.4.1",
  engine: "a9055b89e58b4b5bfb59600785423b1db3d0e75d"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  role: 'role'
};

exports.Prisma.ProfileScalarFieldEnum = {
  userId: 'userId',
  firstname: 'firstname',
  lastname: 'lastname',
  phonenumber: 'phonenumber',
  address: 'address'
};

exports.Prisma.AdminScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  role: 'role'
};

exports.Prisma.EndUserScalarFieldEnum = {
  id: 'id',
  helperId: 'helperId',
  lastPos: 'lastPos',
  status: 'status',
  userId: 'userId',
  createdAt: 'createdAt'
};

exports.Prisma.HelperScalarFieldEnum = {
  id: 'id',
  userId: 'userId'
};

exports.Prisma.CommercialScalarFieldEnum = {
  id: 'id',
  userId: 'userId'
};

exports.Prisma.MaintainerScalarFieldEnum = {
  id: 'id',
  userId: 'userId'
};

exports.Prisma.DeciderScalarFieldEnum = {
  id: 'id',
  userId: 'userId'
};

exports.Prisma.DeviceScalarFieldEnum = {
  id: 'id',
  type: 'type',
  version: 'version',
  macAdr: 'macAdr',
  status: 'status',
  battery: 'battery',
  lastPos: 'lastPos',
  price: 'price',
  createdAt: 'createdAt',
  userId: 'userId'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  content: 'content',
  isRead: 'isRead',
  createdAt: 'createdAt',
  userId: 'userId'
};

exports.Prisma.UserDeviceHistoryScalarFieldEnum = {
  id: 'id',
  deviceId: 'deviceId',
  userId: 'userId',
  useDate: 'useDate'
};

exports.Prisma.EnvironmentScalarFieldEnum = {
  id: 'id',
  name: 'name',
  address: 'address',
  cords: 'cords',
  pathCartographie: 'pathCartographie',
  createdAt: 'createdAt',
  scale: 'scale'
};

exports.Prisma.EnvUserScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  envId: 'envId'
};

exports.Prisma.ZoneScalarFieldEnum = {
  id: 'id',
  envId: 'envId',
  name: 'name',
  type: 'type',
  color: 'color',
  icon: 'icon',
  cords: 'cords'
};

exports.Prisma.POIScalarFieldEnum = {
  id: 'id',
  zoneId: 'zoneId',
  name: 'name',
  category: 'category',
  description: 'description',
  location: 'location'
};

exports.Prisma.ObstacleScalarFieldEnum = {
  id: 'id',
  envId: 'envId',
  name: 'name',
  description: 'description',
  cords: 'cords'
};

exports.Prisma.ItineraryScalarFieldEnum = {
  id: 'id',
  startPoint: 'startPoint',
  endPoint: 'endPoint',
  envId: 'envId'
};

exports.Prisma.HelpRequestScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  helperId: 'helperId'
};

exports.Prisma.SaleScalarFieldEnum = {
  id: 'id',
  deviceId: 'deviceId',
  buyerId: 'buyerId',
  createdAt: 'createdAt'
};

exports.Prisma.InterventionScalarFieldEnum = {
  id: 'id',
  type: 'type',
  deviceId: 'deviceId',
  maintainerId: 'maintainerId',
  isRemote: 'isRemote',
  planDate: 'planDate'
};

exports.Prisma.LogScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  createdAt: 'createdAt',
  details: 'details'
};

exports.Prisma.KPIScalarFieldEnum = {
  id: 'id',
  name: 'name',
  value: 'value',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.Role = exports.$Enums.Role = {
  super: 'super',
  normal: 'normal'
};

exports.DeviceStatus = exports.$Enums.DeviceStatus = {
  connected: 'connected',
  disconnected: 'disconnected',
  under_maintenance: 'under_maintenance',
  en_panne: 'en_panne'
};

exports.ZoneType = exports.$Enums.ZoneType = {
  Zone_de_circulation: 'Zone_de_circulation',
  Zone_de_travail: 'Zone_de_travail',
  Zone_de_service: 'Zone_de_service',
  Zone_interdite: 'Zone_interdite',
  Zone_danger: 'Zone_danger'
};

exports.POICategory = exports.$Enums.POICategory = {
  acceuil: 'acceuil',
  bureau: 'bureau',
  sortie: 'sortie'
};

exports.InterventionType = exports.$Enums.InterventionType = {
  preventive: 'preventive',
  curative: 'curative'
};

exports.Prisma.ModelName = {
  User: 'User',
  Profile: 'Profile',
  Admin: 'Admin',
  EndUser: 'EndUser',
  Helper: 'Helper',
  Commercial: 'Commercial',
  Maintainer: 'Maintainer',
  Decider: 'Decider',
  Device: 'Device',
  Notification: 'Notification',
  UserDeviceHistory: 'UserDeviceHistory',
  Environment: 'Environment',
  EnvUser: 'EnvUser',
  Zone: 'Zone',
  POI: 'POI',
  Obstacle: 'Obstacle',
  Itinerary: 'Itinerary',
  HelpRequest: 'HelpRequest',
  Sale: 'Sale',
  Intervention: 'Intervention',
  Log: 'Log',
  KPI: 'KPI'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
